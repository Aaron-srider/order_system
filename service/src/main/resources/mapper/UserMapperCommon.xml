<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.bistu.auth.mapper.UserMapper.Common">

    <!--用户查询列与javaBean映射表-->
    <resultMap id="userResultMap" type="cn.edu.bistu.model.vo.UserVo">
        <id property="id" column="user_id"/>
        <result property="openId" column="user_open_id"/>
        <result property="sessionKey" column="user_session_key"/>
        <result property="name" column="user_name"/>
        <result property="collegeId" column="user_college_id"/>
        <result property="majorId" column="user_major_id"/>
        <result property="secondaryDeptId" column="user_secondary_dept_id"/>
        <result property="clazzName" column="user_clazz_name"/>
        <result property="grade" column="user_grade"/>
        <result property="gender" column="user_gender"/>
        <result property="avatarUrl" column="user_avatar_url"/>
        <result property="nickName" column="user_nick_name"/>
        <result property="infoComplete" column="user_info_complete"/>
        <result property="studentJobId" column="user_student_job_id"/>
        <result property="deleted" column="user_deleted"/>
        <result property="createTime" column="user_create_time"/>
        <result property="updateTime" column="user_update_time"/>
        <result property="isLock" column="user_is_lock"/>
        <result property="unionId" column="user_union_id"/>

        <association property="major" javaType="cn.edu.bistu.model.entity.Major">
            <id property="id" column="college_id"/>
            <result property="name" column="college_name"/>
        </association>

        <association property="secondaryDept" javaType="cn.edu.bistu.model.entity.SecondaryDept">
            <id property="id" column="secondary_dept_id"/>
            <result property="name" column="secondary_dept_name"/>
        </association>

        <association property="college" javaType="cn.edu.bistu.model.entity.College">
            <id property="id" column="college_id"/>
            <result property="name" column="college_name"/>
        </association>

        <collection property="roleList" javaType="ArrayList" column="user_id" ofType="cn.edu.bistu.model.entity.auth.Role" select="cn.edu.bistu.auth.mapper.UserMapper.getUserRoleListByUserId"/>
    </resultMap>

    <resultMap id="roleResultMap" type="cn.edu.bistu.model.entity.auth.Role">
        <id property="id" column="role_id"/>
        <result property="name" column="role_name"/>
        <result property="text" column="role_text"/>
    </resultMap>

    <!--用户表查询列-->
    <sql id="rowUserColumns">
        user.id as user_id,
--         user.open_id as user_open_id,
--         user.session_key as user_session_key,
        user.name as user_name,
        user.college_id as user_college_id,
        user.major_id as user_major_id,
        user.secondary_dept_id as user_secondary_dept_id,
        user.clazz_name as user_clazz_name,
        user.grade as user_grade,
        user.gender as user_gender,
        user.avatar_url as user_avatar_url,
        user.nick_name as user_nick_name,
        user.student_job_id as user_student_job_id,
        user.info_complete as user_info_complete,
        user.deleted as user_deleted,
        user.create_time as user_create_time,
        user.update_time as user_update_time,
        user.is_lock as user_is_lock
--         user.union_id as user_union_id,
    </sql>

    <sql id="combinationUserColumns">
        <include refid="cn.edu.bistu.auth.mapper.UserMapper.Common.rowUserColumns"/>,
        college.id as college_id,
        college.name as college_name,
        major.id as major_id,
        major.name as major_name,
        secondary_dept.id as secondary_dept_id,
        secondary_dept.name as secondary_dept_name
--         role.id as role_id,
--         role.name as role_name,
--         role.text as role_text
    </sql>

    <!--角色查询连接如下表：学院表、专业表、部门表-->
    <sql id="userJoin">
        left join college on user.college_id = college.id
        left join major on user.major_id = major.id
        left join secondary_dept on user.secondary_dept_id = secondary_dept.id
--         left join user_role on user.id = user_role.user_id
--         left join role on user_role.role_id = role.id
    </sql>

    <!--user表的基本查询语句片段，没有筛选语句-->
    <sql id="basicUserSelectStatementFragment">
        select
        <include refid="cn.edu.bistu.auth.mapper.UserMapper.Common.combinationUserColumns"/>
        from user
        <include refid="cn.edu.bistu.auth.mapper.UserMapper.Common.userJoin"/>
    </sql>


    <!--
    admin查询所有用户的筛选条件：

    筛选条件的构成：
    根据  userVo.roleCategory  判断采用哪个筛选条件组，具体筛选条件组如下：
       RoleCategory:  student
       筛选条件组：studentId,clazzName,majorName

       RoleCategory:  teacher
       筛选条件组：jobId,secondaryDeptName

       RoleCategory:  all
      筛选条件组：jobId(或studentId)

    注意:
        1.使用<choose>结构实现筛选条件组的选择
        2.userVo.name是所有筛选条件组共有的
        3.所有筛选条件组内部，使用<if/>拼接的方式拼接筛选条件
    -->
    <sql id="userConditions">
        <where>
            <if test="userVo.name!=null and userVo.name !=''">
                and user.name like "%" #{userVo.name} "%"
            </if>
            <if test="userVo.studentJobId!=null and userVo.studentJobId !=''">
                and user.student_job_id like "%" #{userVo.studentJobId} "%"
            </if>
            <choose>
                <when test="userVo.roleCategory == 'student'">
                    and user.id in (select
                                        user_role.user_id
                                    from user_role
                                        join role on user_role.role_id = role.id
                                    where
                                        role.id in (6, 7)
                                    )
                    <if test="userVo.clazzName!=null and userVo.clazzName !=''">
                        and user.clazz_name like "%" #{userVo.clazzName} "%"
                    </if>
                    <if test="userVo.majorName!=null and userVo.majorName !=''">
                        and major.name like "%" #{userVo.majorName} "%"
                    </if>
                </when>
                <when test="userVo.roleCategory == 'teacher'">
                    and user.id in (select
                                        user_role.user_id
                                    from user_role
                                        join role on user_role.role_id = role.id
                                    where
                                        role.id in (3, 4, 5)
                                    )
                    <if test="userVo.majorName!=null and userVo.majorName !=''">
                        and secondary_dept.name like "%" #{userVo.secondaryDeptName} "%"
                    </if>
                </when>
                <when test="userVo.roleCategory == 'all'">
                </when>
            </choose>
        </where>
    </sql>


</mapper>